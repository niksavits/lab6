use std::f32;
use std::io::{self, Write};

const E: f32 = 0.001;
const N: usize = 4;

fn main() {
    // Определение матрицы A размером N x N
    let a: [[f32; N]; N] = [
        [1.09, -0.04, 0.21, -18.00],
        [0.25, -1.23, -0.16, -0.09],
        [-0.21, -0.16, 0.8, -0.13],
        [0.15, -1.31, 0.06, 0.84]
    ];

    let mut l = [[0.0; N]; N];
    let mut u = [[0.0; N]; N];
    let b: [f32; N] = [-1.24, 0.84, 2.56, 1.09];
    let mut sum = 0.0;

    // LU-разложение матрицы A
    for i in 0..N {
        for j in 0..N {
            if i <= j {
                l[i][j] = if i == j { 1.0 } else { 0.0 };
                for k in 0..i {
                    sum += l[i][k] * u[k][j];
                }
                u[i][j] = a[i][j] - sum;
            } else {
                u[i][j] = 0.0;
                for k in 0..j {
                    sum += l[i][k] * u[k][j];
                }
                l[i][j] = (a[i][j] - sum) / u[j][j];
            }
            sum = 0.0;
        }
    }

    // Вывод матрицы L
    println!(" L: ");
    for i in 0..N {
        for j in 0..N {
            print!("{:.3}  ", l[i][j]);
        }
        println!();
    }

    // Вывод матрицы U
    println!("\n U: ");
    for i in 0..N {
        for j in 0..N {
            print!("{:.3}  ", u[i][j]);
        }
        println!();
    }

    // Решение системы уравнений методом LU-разложения
    let mut x = [0.0; N];
    let mut y = [0.0; N];
    for k in 0..N {
        for j in 0..k {
            sum += l[k][j] * y[j];
        }
        y[k] = b[k] - sum;
        sum = 0.0;
    }
    for k in (0..N).rev() {
        for j in (k + 1)..N {
            sum += u[k][j] * x[j];
        }
        x[k] = (y[k] - sum) / u[k][k];
        sum = 0.0;
    }

    println!();
    for k in 0..N {
        println!(" X{} : {:.3}  Y{} : {:.3}", k + 1, x[k], k + 1, y[k]);
    }
    println!();

    // Метод простой итерации
    let mut x_iter = [0.0; N];
    let mut c = [[0.0; N]; N];
    let mut f = [0.0; N];
    let mut iter = 0;
    let mut x_time = [0.0; N];

    println!("{:<10} {:<20} {:<12} {:<12} {:<10} {:<25}", "N", "x1", "x2", "x3", "x4", "En");

    loop {
        for i in 0..N {
            for j in 0..N {
                if i == j {
                    c[i][j] = 0.0;
                } else {
                    c[i][j] = -a[i][j] / a[i][i];
                    sum += c[i][j];
                }
            }
            x_time[i] = x_iter[i];
            f[i] = b[i] / a[i][i];
            x_iter[i] = f[i] + sum * x_iter[i];
            sum = 0.0;
        }

        if (x_iter[0] - x_time[0]).abs() < E {
            println!("Сходится ");
            println!();
            for k in 0..N {
                println!(" X{} : {:.3}", k + 1, x_iter[k]);
            }
            break;
        }
        if iter > 16 {
            println!("Расходится. Причины: Диагональное преобладание: Матрица коэффициентов системы линейных уравнений должна быть диагонально доминирующей. Это означает, что модуль элемента на главной диагонали матрицы должен быть больше суммы модулей всех остальных элементов в соответствующей строке (или столбце).");
            println!("Норма матрицы меньше 1: Норма матрицы, обратной к матрице коэффициентов системы, должна быть меньше 1. Это обеспечивает сходимость итерационного процесса.");
            break;
        }
        iter += 1;

        println!("{:<10} {:<25.3} {:<15.3} {:<10.3} {:<10.3} {:<25.3}", iter, x_iter[0], x_iter[1], x_iter[2], x_iter[3], x_iter[0] - x_time[0]);
    }
}
